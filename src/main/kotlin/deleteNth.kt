import org.junit.Assert.assertArrayEquals
import kotlin.system.measureTimeMillis

fun deleteNth(elements:IntArray, maxOcurrences:Int):IntArray {
        var cleanArray = mutableListOf<Int>()
        var occurenceMap = mutableMapOf<Int, Int>()
        var count: Int
        if (elements.isNotEmpty() && maxOcurrences != 0) {
                for(i in elements) {
                        if(occurenceMap.containsKey(i) && occurenceMap.getValue(i) < maxOcurrences) {
                                cleanArray.add(i)
                                // current count
                                count = occurenceMap.getValue(i)
                                occurenceMap[i] = count+1
                        } else if(!occurenceMap.containsKey(i)){
                                cleanArray.add(i)
                                occurenceMap[i] = 1
                        }
                }
                occurenceMap.forEach {
                        println("Key: ${it.key} has count of ${it.value}")
                }
                println("Returning ${cleanArray.toString()}")
                return cleanArray.toIntArray()
        } else {
                return intArrayOf()
        }

}
fun main () {
//        deleteNth(intArrayOf(1, 1, 2, 3, 4, 5, 6, 2),1)
//    val time = measureTimeMillis {
//        assertArrayEquals(intArrayOf(20, 37, 21),
//                deleteNth(intArrayOf(20, 37, 20, 21), 1)
//        )
        assertArrayEquals(
                intArrayOf(1, 1, 3, 3, 7, 2, 2, 2),
                deleteNth(intArrayOf(1, 1, 3, 3, 7, 2, 2, 2, 2), 3)
        )
//        assertArrayEquals(
//                intArrayOf(1, 2, 3, 1, 1, 2, 2, 3, 3, 4, 5),
//                deleteNth(intArrayOf(1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1), 3)
//        )
//        assertArrayEquals(
//                intArrayOf(1, 1, 1, 1, 1),
//                deleteNth(intArrayOf(1, 1, 1, 1, 1), 5)
//        )
        assertArrayEquals(
                intArrayOf(),
                deleteNth(intArrayOf(), 5)
        )
//        deleteNth(intArrayOf(1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
//                2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1,
//                1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2
//                , 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3,
//                1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
//                2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
//                2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3,
//                2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5,
//                3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
//                2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2,
//                3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2,
//                4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1), 3)
//        assertArrayEquals(
//                intArrayOf(1, 2, 3, 1, 1, 2, 2, 3, 3, 4, 5),
//                deleteNth(intArrayOf(1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
//                        2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1,
//                        1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
//                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2
//                        , 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3,
//                        1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
//                        2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
//                        2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3,
//                        2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5,
//                        3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
//                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
//                        2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2,
//                        3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2,
//                        4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1), 3)
//        )
                assertArrayEquals(
                intArrayOf(1, 2, 3, 4, 5),
                deleteNth(intArrayOf(1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
                        2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1,
                        1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1,
                        2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2
                        , 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3,
                        1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
                        2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1,
                        2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3,
                        2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5,
                        3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2,
                        3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1,
                        2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2,
                        3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2,
                        4, 5, 3, 1, 2, 3, 1, 1, 2, 1, 2, 3, 3, 2, 4, 5, 3, 1), 1)
        )
//    }
//    println("Execution time: $time")
}
